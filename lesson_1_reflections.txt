How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Comparing the old code, that was working, with the new code, 
that wasn't working, shows the changes that were made. So when looking at the changes
and what's different you may find the error that caused the problems


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Because when your program doesn't work anymore and you can't seem to find the bug, 
you can restore an old version of your program, that still worked. It saves you
a lot of time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros
- logical commits with useful messages are created, so you know exactly what 
code changed
- you only commit things, that you are certain are finished and not an half finished
feature or even worse not working feature

Cons
- in case you often forget to save/commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because changes in one file might affect another file, so that you need to change 
that file as well.

How can you use the commands git log and git diff to view the history of files?

You can see the changes that were made in the new commit
-git log --stat
-git diff id1 id2

How might using version control make you more confident to make changes that
could break something?

Because in case you break something you can always restore an older working
version of the code and you can easily retrace what caused the bug or misbehaviour
or whatever

Now that you have your workspace set up, what do you want to try using Git for?

Using it for my website project I have going